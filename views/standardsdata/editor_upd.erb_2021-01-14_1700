<!DOCTYPE html>
<%#include "standardsdata.h" %>
<%#include "standardsmeta.h" %>
<% tfetch(StandardsData, standardsData); %>
<% tfetch(StandardsMeta, standardsMeta); %>
<html>
<head>
  <meta charset="UTF-8">
  <html lang="de">

  <title><%= controller()->name() + ": " + controller()->activeAction() %></title>

  <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=yes">

  <link rel="icon" type="image/svg+xml" href="/favicon.svg">
  <link rel="alternate icon" href="/favicon.ico">
  <link rel="mask-icon" href="/favicon.svg" color="#b2b2b2">

  <script>
    function doLocal()
    {
        console.log("this is local");

        let l_footer = document.getElementById("itisFooter");
        l_footer.message = '<a href="/stdsystem/license" title="licenses">Lizenzen</a>&nbsp;<a href="/stdsystem/imprint" title="Impressum">Imprint</a>';

		// load defaults
        getObjects(<%==$ jsonObjects %>);
        getCategories(<%==$ jsonCategories %>);
        getLanguages(<%==$ jsonLanguages %>);
        getAcClasses(<%==$ jsonAcClasses %>);
        getPcClasses(<%==$ jsonPcClasses %>);
        getReleaseTypes(<%==$ jsonReleaseTypes %>);
        setSpecValidDate();
        
        document.getElementById("releases").selectedIndex = "0";
        document.getElementById("releases").options[2].disabled = true;
        document.getElementById("releases").options[3].disabled = true;
        
        document.getElementById("lfdnr").addEventListener("click", function(){ document.getElementById('checkLfdnrImg').removeAttribute("class"); document.getElementById('checkLfdnrImg').setAttribute("src", "/Icons/question.svg");});
		
		//getNextLfdnr();
		
		// load spec-data
		setTitle("<%= standardsData.specTitle() %>");
		setDesc("<%= standardsData.specDesc() %>");
		setObjects("<%= standardsData.objSname() %>");
		setCategories("<%= standardsData.catClass() %>");
		setCountry("<%= standardsData.country() %>");
        setLanguages("<%= standardsData.lang() %>");
        setResponsibility("<%= standardsMeta.responsibility() %>");
        setAcClasses("<%= standardsData.acClasses() %>");
        setPcClasses("<%= standardsData.pcClasses() %>");
        setReleaseTypes("<%= standardsData.specRelease() %>");
        setLfdnr("<%= standardsData.lfdnr() %>");
        setComment("<%= standardsMeta.specComment() %>");
        setActive("<%= standardsData.specActive() %>");
        setLegacy("<%= standardsMeta.gLegacy() %>");
        setMarker("<%= standardsMeta.specMarker() %>");
        setNextVersion("<%= standardsData.specVersion() %>");
        setNextVersion("<%= standardsData.specVersion() %>");
    }

	function setLanguage(lang)
	{
		if(lang == "0")	{lang = "de";}
		else {lang = "en";}
		document.cookie = "lang=" + lang + ";" + ";path=/";
		location.reload();
	}

  </script>

  <script type="module" src="/js/itis_init.js" /></script>
  <link rel="stylesheet" href="/css/w3.css">  
  <link rel="stylesheet" href="/css/custom.css">

  <script src="/js/standards/standards_editor.js" /></script>
  <script src="/js/standards/standards_editor_upd.js" /></script>

</head>

<body class="w3-container w3-margin" id="body">

  <itis-menu id="itisMenu" message=""></itis-menu>

  <div class="w3-container w3-light-blue">
    <h2 id="portaltitle">ITIS-API::Admin-Portal</h2>
  </div>

  <itis-menusub id="itisMenuSub" message="<%= controller()->name() %>"></itis-menusub>

<h3 id="pagetitle"><page-title message=""><%= controller()->name() + ": " + controller()->activeAction() %></page-title></h3>
	<div id="pagedesc"><page-desc message=""></page-desc></div>

<p id="redmsg" style="color: red"></p><p id="greenmsg" style="color: green"><%=$ green_msg %></p>
<div id="test" style="display: none;" class="w3-modal">
    <div class="w3-modal-content">
      <div class="w3-container">
        <span onclick="document.getElementById('test').style.display='none'" class="w3-button w3-display-topright">&times;</span>
        <span id="msg"></span>
      </div>
    </div>
  </div>
</div>


<main>
<div id="pagecontent"><page-content message=""></page-content></div>

     <form id="addSpec">
        <section style="border-radius: 0.5em 0.5em 0px 0px;">
            <div class="w3-cell-row">
                <div class="w3-container w3-cell">
                    <span class="w3-tooltip">
                        <label for="spec_title">Titel:&nbsp;</label><br><input type="text" id="spec_title" name="spec_title" maxlength="100" style="width:80%" value="<%= standardsData.specTitle() %>" required>
                    <span style="position:absolute;left:0;bottom:18px" class="w3-text w3-tag">Baustein-Titel, Verwendung im Inhaltsverzeichnis</span>
                    <br>
                </div>
                <div class="w3-container w3-cell">
                    <span class="w3-tooltip">
                        <label for="spec_desc">Beschreibung:&nbsp;</label><br><input type="text" id="spec_desc" name="spec_desc" maxlength="100" style="width:80%" value="<%= standardsData.specDesc() %>" required>
                    <span style="position:absolute;left:0;bottom:18px" class="w3-text w3-tag">Kurzbeschreibung f&uuml;r Text-Baustein Administration</span>
                    <br>
                </div>
            </div>
            <br>
            <div class="w3-cell-row">
                <fieldset id="fsobjects"><legend>Objekte</legend>
                    <div class="w3-container w3-cell">
						<button onclick="toggleObjCheckboxes('objects')" type="button" id="btnObj">toggle:</button>&nbsp;
                        <span class="w3-tooltip">
                            <span id="objects"></span>
                        <span style="position:absolute;left:0;bottom:18px" class="w3-text w3-tag">Ein oder mehrere Objekte</span></span>
                        <br>
                    </div>
                </fieldset>
            </div>
            <br>
            
            <div class="w3-cell-row">
                <fieldset><legend>Objekt-Attribute</legend>
                    <div class="w3-container w3-cell">
                        <label for="cat">Kategorie:&nbsp;</label><br><select name="cat" id="cat"></select>
                        <br>
                    </div>
                    <div class="w3-container w3-cell">
                        <span class="w3-tooltip">
                            <label for="country">Land:&nbsp;</label><br><input type="text" id="country" name="country" minlength="2" maxlength="2" size="5" placeholder="WW" value="<%= standardsData.country() %>" required>
                        <span style="position:absolute;left:0;bottom:18px" class="w3-text w3-tag">2-stelliger L&auml;ndercode (WW = World Wide)</span>
                        <br>
                    </div>
                    <div class="w3-container w3-cell">
                        <label for="lang">Sprache:&nbsp;</label><br><select name="lang" id="lang"></select>
                        <br>
                    </div>
                    <div class="w3-container w3-cell">
                        <span class="w3-tooltip">
                            <label for="spec_version">Version (alt):&nbsp;</label><br><input type="text" id="spec_version" name="spec_version" minlength="9" maxlength="9" size="10" placeholder="v00.00.01" value="<%= standardsData.specVersion() %>" required disabled>
                        <span style="position:absolute;left:0;bottom:18px" class="w3-text w3-tag">Text-Baustein Version (Bsp.: v00.01.02)</span>
                        <br>
                    </div>
                    <div class="w3-container w3-cell">
                        <span class="w3-tooltip">
                            <label for="spec_version_new">Version (neu):&nbsp;</label><br><input type="text" id="spec_version_new" name="spec_version_new" minlength="9" maxlength="9" size="10" placeholder="v01.02.03" value="v00.00.02" required>
                        <span style="position:absolute;left:0;bottom:18px" class="w3-text w3-tag">Text-Baustein Version (Bsp.: v00.01.02)</span>
                        <br>
                    </div>
                    <div class="w3-container w3-cell">
                        <span class="w3-tooltip">
                            <label for="lfdnr">lfdnr:&nbsp;</label><br><input type="number" id="lfdnr" name="lfdnr" minlength="3" maxlength="3" size="10" placeholder="099" value="<%= standardsData.lfdnr() %>" required>
							<span style="position:absolute;left:0;bottom:18px" class="w3-text w3-tag">3-stellige Text-Baustein Nummerierung (Bsp.: 013)</span>
                        </span>
                        <span class="w3-tooltip">
							<span style="position:absolute;left:0;bottom:18px" class="w3-text w3-tag">check lfdnr innerhalb der gew&auml;hlten Cat</span>
                        &nbsp;<img id="checkLfdnrImg" src="/Icons/question.svg" onclick="checkLfdnr()" onmouseover="style='cursor: pointer;'">&nbsp;<span id="lfdnrErg" class="w3-tag">
						</span>
                        <br>
                    </div>
                    <div class="w3-container w3-cell">
                        <span class="w3-tooltip">
                            <label for="resp">Verantwortlich:&nbsp;</label><br><input type="text" id="resp" name="resp" maxlength="200" style="width:100%" value="<%= standardsMeta.responsibility() %>">
                        <span style="position:absolute;left:0;bottom:18px" class="w3-text w3-tag">Verantwortlicher: email, Abteilung, Jira-Key</span>
                        <br>
                    </div>
                </fieldset>
            </div>
            <br>
            <div class="w3-cell-row">
                <div class="w3-container w3-cell">
                    <fieldset id="fsac_classes"><legend>Availability Class</legend>
                        <button onclick="toggleCheckboxes('ac_class')" type="button" id="btnAc">toggle:</button>&nbsp;
                        <span class="w3-tooltip">
                            <span id="ac_classes"></span>
                        <span style="position:absolute;left:0;bottom:18px" class="w3-text w3-tag">Eine oder mehrere AC. AC-0 nur mit Obj/Kat &quot;Allgemein&quot;</span> </span>
                    </fieldset>
                    <br>
                </div>
                <div class="w3-container w3-cell">
                    <fieldset id="fspc_classes"><legend>Protection Class</legend>
                        <button onclick="toggleCheckboxes('pc_class')" type="button" id="btnPc">toggle:</button>&nbsp;
                        <span class="w3-tooltip">
                            <span id="pc_classes"></span>
                        <span style="position:absolute;left:0;bottom:18px" class="w3-text w3-tag">Eine oder mehrere PC. PC-0 nur mit Obj/Kat &quot;Allgemein&quot;</span> </span>
                    </fieldset>
                    <br>
                </div>
                <div class="w3-container w3-cell">
                    <fieldset><legend>Legacy</legend>
                        <span class="w3-tooltip">
                            <label><input type="checkbox" name="legacy" id="G2">&nbsp;G2</label>
                            <label><input type="checkbox" name="legacy" id="G3">&nbsp;G3</label>
                        <span style="position:absolute;left:0;bottom:18px" class="w3-text w3-tag">ehemals G2 od. G3</span> </span>
                        <br>
                     </fieldset>
                </div>
            </div>

            <div class="w3-cell-row">
                <fieldset><legend>Text-Baustein</legend>
                    <div class="w3-container w3-cell">
                        <label for="releases">Release:&nbsp;</label><br><select name="releases" id="releases"></select>
                        <br>
                    </div>
                    <div class="w3-container w3-cell">
                        <span class="w3-tooltip">
                            <label for="spec_valid_start">g&uuml;ltig von:&nbsp;</label><br>
                            <input type="datetime-local" id="spec_valid_start" name="spec_valid_start" disabled>
                        <span style="position:absolute;left:0;bottom:18px" class="w3-text w3-tag">Start-Datum</span> </span>
                        <br>
                    </div>
                    <div class="w3-container w3-cell">
                        <span class="w3-tooltip">
                            <label for="spec_valid_end">g&uuml;ltig bis:&nbsp;</label><br><input type="datetime-local" id="spec_valid_end" name="spec_valid_end" disabled>
                        <span style="position:absolute;left:0;bottom:18px" class="w3-text w3-tag">vorl&auml;ufiges End-Datum</span> </span>
                    </div>
                    <div class="w3-container w3-cell">
                        <br>
                        <span class="w3-tooltip">
                            <label><input type="checkbox" name="spec_active" id="spec_active" checked>&nbsp;aktiv</label>
                        <span style="position:absolute;left:0;bottom:18px" class="w3-text w3-tag">Baustein aktiv oder in-aktiv</span> </span>
                        <br>
                    </div>
                    <div class="w3-container w3-cell">
                            <label for="last_editor">Autor:&nbsp;</label><br><input type="text" id="last_editor" name="last_editor" value="<%=$ userMail %>" disabled style="width:80%">
                        <br>
                    </div>
                    <div class="w3-container w3-cell">
                        <span class="w3-tooltip">
                            <label for="comment">Kommentar:&nbsp;</label><br><input type="text" id="comment" name="comment" maxlength="200" style="width:100%" value="<%= standardsMeta.specComment() %>">
                        <span style="position:absolute;left:0;bottom:18px" class="w3-text w3-tag">optional: interne Bemerkung, auch f&uuml;r Release</span>
                        <br>
                    </div>
                    <div class="w3-container w3-cell">
                        <span class="w3-tooltip">
                            <label for="marker">Marker:&nbsp;</label><br>
								<select id="marker" name="marker">
								  <option value="nomark">---</option>
								  <option value="green" class="w3-opacity w3-light-green">gr&uuml;n</option>
								  <option value="yellow" class="w3-opacity w3-yellow">gelb</option>
								  <option value="red" class="w3-opacity w3-deep-orange">rot</option>
								</select>
                        <span style="position:absolute;left:0;bottom:18px" class="w3-text w3-tag">interne Hilfs-Markierung</span>
                        <br>
                    </div>
                </fieldset>
            </div>
        </section>
<p><input type="submit" id="speichern" value="speichern &raquo;" title="Baustein speichern"></p>
        <textarea name="content" id="editor" class="editor">
			<%== standardsData.specContent() %>
        </textarea>
    </form>
<p><input type="submit" id="submit" value="speichern &raquo;" title="Baustein speichern"></p>

<script src="/js/ckedit5/22.0.0/ckeditor.js"></script>
	<script>
        function addSpec(content)
{
    document.getElementById("redmsg").innerHTML = "";
    document.getElementById("greenmsg").innerHTML = "";
    
    let formData = new FormData();
    let spec_title = "", spec_desc = "", obj_name = "", cat = "", country = "", lang = "", spec_version = "", spec_version_new = "", lfdnr = "", ac_classes = "", pc_classes = "", spec_active = "";
    let last_editor = "", releases = "", spec_valid_start = "", spec_valid_end = "", spec_content  = ""; g_legacy = ""; resp = ""; comment = ""; marker = "";
    var x = document.getElementById("addSpec");
    var i;

    var text = true;
    
    // document.getElementById("redmsg").innerHTML += "main spec_content:<br>" + document.getElementById("editor").value;
    
    for (i = 0; i < x.length ;i++) 
    {
        if(x.elements[i].name != "content" || x.elements[i].id !== '' || x.elements[i].id !== null || x.elements[i].name !== '')
        {
            let id = document.getElementById(x.elements[i].id);
            try{
                if (!id.checkValidity())
                {
                    document.getElementById("redmsg").innerHTML += "<p><b>" + id.validationMessage + "</b></p>";
                    id.className = "w3-border-red";
                    text = false;
                }
            }
            catch(ERR){
                console.log("validation err " + x.elements[i].name + " " + x.elements[i].id + ": " + ERR);
            }
            
            if(x.elements[i].name == "spec_title" && x.elements[i].value !== '')
            {
                spec_title = x.elements[i].value;
            }
            else if(x.elements[i].name == "spec_title" && x.elements[i].value === '')
            {
                document.getElementById("redmsg").innerHTML += x.elements[i].name;
                text = false;
            }
            
            if(x.elements[i].name == "spec_desc" && x.elements[i].value !== '')
            {
                spec_desc = x.elements[i].value;
            }
            else if(x.elements[i].name == "spec_desc" && x.elements[i].value === '')
            {
                document.getElementById("redmsg").innerHTML += x.elements[i].name;
                text = false;
            }
            
            if(x.elements[i].name == "cbobj" && x.elements[i].checked)
            {
               obj_name += x.elements[i].id + ",";
            }
            
            if(x.elements[i].name == "cat")
            {
                cat = x.elements[i].value;
            }
            
            if(x.elements[i].name == "country" && x.elements[i].value !== '')
            {
                country = x.elements[i].value;
            }
            else if(x.elements[i].name == "country" && x.elements[i].value === '')
            {
                document.getElementById("redmsg").innerHTML += x.elements[i].name;
                text = false;
            }
            
            if(x.elements[i].name == "lang")
            {
                lang = x.elements[i].value;
            }
            
            if(x.elements[i].name == "spec_version" && x.elements[i].value !== '')
            {
                spec_version = x.elements[i].value;
            }
            else if(x.elements[i].name == "spec_version" && x.elements[i].value === '')
            {
                document.getElementById("redmsg").innerHTML += x.elements[i].name;
                text = false;
            }
            if(x.elements[i].name == "spec_version_new" && x.elements[i].value !== '')
            {
                spec_version_new = x.elements[i].value;
            }
            else if(x.elements[i].name == "spec_version_new" && x.elements[i].value === '')
            {
                document.getElementById("redmsg").innerHTML += x.elements[i].name;
                text = false;
            }
            
            if(x.elements[i].name == "lfdnr" && x.elements[i].value !== '')
            {
                lfdnr = x.elements[i].value;
            }
            else if(x.elements[i].name == "lfdnr" && x.elements[i].value === '')
            {
                document.getElementById("redmsg").innerHTML += x.elements[i].name;
                text = false;
            }
            
            if(x.elements[i].name == "ac_class" && x.elements[i].checked)
            {
                /*
                let ac = x.elements[i].id;
                let acs = ac.split("AC-");
                ac_classes += acs[1] + ",";
                */
                ac_classes += x.elements[i].value + ","; 
            }
            
            if(x.elements[i].name == "pc_class" && x.elements[i].checked)
            {
				/*
                let pc = x.elements[i].id;
                let pcs = pc.split("PC-");
                pc_classes += pcs[1] + ",";
                */
                pc_classes += x.elements[i].value + ","; 
            }
            
            if(x.elements[i].name == "releases")
            {
                releases = x.elements[i].value;
            }
            
            if(x.elements[i].name == "spec_valid_start")
            {
                spec_valid_start = x.elements[i].value;
            }
                      
            if(x.elements[i].name == "spec_valid_end")
            {
                spec_valid_end = x.elements[i].value;
            }
            
            if(x.elements[i].name == "spec_active" && x.elements[i].checked)
            {
                spec_active = "1";
            }
            else if(x.elements[i].name == "spec_active" && x.elements[i].checked == false)
            {
                spec_active = "0";
            }
            
            if(x.elements[i].name == "last_editor")
            {
                last_editor = x.elements[i].value;
            }
            
            if(x.elements[i].name == "legacy" && x.elements[i].checked)
            {
                g_legacy += x.elements[i].id + ",";
            }
            
            if(x.elements[i].name == "resp")
            {
                resp = x.elements[i].value;
            }
            
            if(x.elements[i].name == "comment")
            {
                comment = x.elements[i].value;
            }
            
            if(x.elements[i].name == "marker")
            {
                marker = x.elements[i].value;
            }
        }
    }
    if(obj_name.length <= 1)
    {
        document.getElementById("redmsg").innerHTML += "<p><b>bitte ein od. mehrere Objekt(e) ausw&auml;hlen</b></p>";
        document.getElementById("fsobjects").className = "w3-border-red";
        text = false;
    }
    if(ac_classes.length <= 1)
    {
        document.getElementById("redmsg").innerHTML += "<p><b>bitte eine od. mehrere Verf&uuml;gbarkeitsklasse(n) ausw&auml;hlen</b></p>";
        document.getElementById("fsac_classes").className = "w3-border-red";
        text = false;
    }
    if(pc_classes.length <= 1)
    {
        document.getElementById("redmsg").innerHTML += "<p><b>bitte eine od. mehrere Protection class(es) ausw&auml;hlen</b></p>";
        document.getElementById("fspc_classes").className = "w3-border-red";
        text = false;
    }
    
    spec_content = content;
    
    //document.getElementById("redmsg").innerHTML += text;
    
    if(text === false)
    {
        return; 
    }

  
    let data = 0;       
    data = new URLSearchParams([["id", <%= standardsData.id() %>], ["spec_title", spec_title], ["spec_desc", spec_desc], ["obj_sname", obj_name], ["cat_class", cat], ["country", country], ["lang", lang], ["spec_version", spec_version], ["spec_version_new", spec_version_new], ["last_editor", last_editor], ["spec_active", spec_active], ["lfdnr", lfdnr], ["ac_classes", ac_classes], ["pc_classes", pc_classes], ["spec_release", releases], ["spec_content", spec_content], ["spec_valid_start", spec_valid_start], ["spec_valid_end", spec_valid_end], ["g_legacy", g_legacy], ["resp", resp], ["comment", comment], ["marker", marker]]);
/*    fetch("/StandardsData/setStdData", {
    body: data,
    method: "post"
    });
*/    
    
		fetch("/StandardsData/updStdData", { body: data, method: "post" })
		  .then(data => data.json())
		  .then((json) => 
		  {
			if(json[0].ERROR === "0")
			{
				document.getElementById("greenmsg").innerHTML = `<b>Baustein aktualisiert.</b><br/>Data-ID:<a href="/standardsdata/show/${json[0].data_id}" title="show">${json[0].data_id}</a>`;
				doPopUp(`<p style="color: green"><b>Baustein aktualisiert.</b><br/>Data-ID: ${json[0].data_id}</p>`);
			}
			else
			{
				document.getElementById("redmsg").innerHTML = "<b>Baustein <u>nicht</u> aktualisiert.</b><br/>" + json[0].ERROR + " " + json[0].errMsg ;
				doPopUp(`<p style="color: red"><b>Baustein <u>nicht</u> aktualisiert.</b><br/>${json[0].ERROR}<br/>${json[0].errMsg}</p>`);
			}
		  })
		  .catch((error) => { document.getElementById("redmsg").innerHTML = "Fehler: " + error + data; });
/*
    
    document.getElementById("greenmsg").innerHTML += "<br><b>Baustein erstellt.</b>";
    if(text === true)
    {
        //window.location.href = '/objspecs/editor_add'; 
    }
*/

}

        
        ClassicEditor
			.create( document.querySelector( '.editor' ), {
				removePlugins: [ 'Title' ],
                                    simpleUpload: {
                        // The URL that the images are uploaded to.
                        uploadUrl: '/standardsdata/uploadImg'
                    },
                    
                    heading: {
            options: [
                { model: 'paragraph', title: 'Paragraph', class: 'ck-heading_paragraph' },
                { model: 'heading1', view: 'h1', title: 'Heading 1', class: 'ck-heading_heading1' },
                { model: 'heading2', view: 'h2', title: 'Heading 2', class: 'ck-heading_heading2' },
                { model: 'heading3', view: 'h3', title: 'Heading 3', class: 'ck-heading_heading3' },
                { model: 'heading4', view: 'h4', title: 'Heading 4', class: 'ck-heading_heading4' }
            ]
        },
				toolbar: {
					items: [
						'heading',
						'|',
						'fontFamily',
						'fontSize',
						'fontColor',
						'|',
						'bold',
						'underline',
						'fontBackgroundColor',
						'italic',
						'highlight',
						'|',
						'bulletedList',
						'numberedList',
						'indent',
						'outdent',
						'alignment',
						'|',
						'blockQuote',
						'code',
						'codeBlock',
						'insertTable',
						'|',
						'link',
						'imageUpload',
						'mediaEmbed',
						'undo',
						'redo'
					],
                    
				},
				language: 'de',
				image: {
					toolbar: ['imageTextAlternative', 'imageStyle:full', 'imageStyle:alignLeft', 'imageStyle:alignCenter', 'imageStyle:alignRight'],
                    styles: ['full', 'alignLeft', 'alignCenter', 'alignRight'],
                    upload: {
						panel: {
							items: [ 'insertImageViaUrl' ]
							}
						}
				},
				table: {
					contentToolbar: [
						'tableColumn',
						'tableRow',
						'mergeTableCells',
						'tableCellProperties',
						'tableProperties'
					]
				},
				licenseKey: '',
				
			} )
			.then( editor => {
				window.editor = editor;
				
			} )
			.catch( error => {
				console.error( 'Oops, something gone wrong!' );
				console.error( 'Please, report the following error in the https://github.com/ckeditor/ckeditor5 with the build id and the error stack trace:' );
				console.warn( 'Build id: i2w79xgbp58m-q6fhvztvacln' );
				console.error( error );
			} );
            
           //console.log(ClassicEditor.builtinPlugins.map( plugin => plugin.pluginName ));
           //document.querySelector( '#submit' ).addEventListener( 'click', () => {const editorData = editor.getData(); document.getElementById("editor").value = editorData;} );
           document.getElementById("speichern").addEventListener("click", () => {const editorData = editor.getData(); addSpec(editorData)});
           document.getElementById("submit").addEventListener("click", () => {const editorData = editor.getData(); addSpec(editorData)});
	</script>

<hr>
<section style="border-radius: 0px 0px 0.5em 0.5em">
	<button id="gallery" onclick="myFunction('Images')" class="w3-button w3-block w3-light-grey w3-left-align w3-border-grey"><img src = "/Icons/images.svg"/> &nbsp;Standards Gallery &nbsp;<img id="icongal" src="/Icons/chevron-double-down.svg"/></button>

<script>
function myFunction(id) 
{
  const x = document.getElementById(id);
  const icongal = document.getElementById("icongal");
  if (x.className.indexOf("w3-show") == -1) 
  {
    x.className += " w3-show";
    icongal.setAttribute("src", "/Icons/chevron-double-up.svg");
  } 
  else 
  { 
    x.className = x.className.replace(" w3-show", "");
  	icongal.setAttribute("src", "/Icons/chevron-double-down.svg");
  }
}
</script>      

<div id="Images" class="w3-hide">

<p>URL Text kopieren um in den Baustein via IMG-URL einzufügen.</p>

<!--
<div class="responsive">
  <div class="gallery">
    <a target="_blank" href="/Test/1.png">
      <img src="/Test/1.png" alt="Cinque Terre" width="600" height="400">
    </a>
    <div class="desc">Add a description of the image here</div>
  </div>
</div>
-->

<div class="clearfix"></div>
</div>
</section>
<hr>

</main>

<script>getGalleryImgs();</script>

<itis-footer id="itisFooter" message=""></itis-footer>
  
</body>
</html>
